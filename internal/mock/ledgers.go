// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/NickRI/wallets-task/domain/repositories (interfaces: Ledgers)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	sql "database/sql"
	reflect "reflect"

	entities "github.com/NickRI/wallets-task/domain/entities"
	gomock "github.com/golang/mock/gomock"
	decimal "github.com/shopspring/decimal"
)

// MockLedgers is a mock of Ledgers interface
type MockLedgers struct {
	ctrl     *gomock.Controller
	recorder *MockLedgersMockRecorder
}

// MockLedgersMockRecorder is the mock recorder for MockLedgers
type MockLedgersMockRecorder struct {
	mock *MockLedgers
}

// NewMockLedgers creates a new mock instance
func NewMockLedgers(ctrl *gomock.Controller) *MockLedgers {
	mock := &MockLedgers{ctrl: ctrl}
	mock.recorder = &MockLedgersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLedgers) EXPECT() *MockLedgersMockRecorder {
	return m.recorder
}

// AddTx mocks base method
func (m *MockLedgers) AddTx(arg0 *sql.Tx, arg1 context.Context, arg2, arg3 *entities.Account, arg4 decimal.Decimal) (*entities.Ledger, error) {
	ret := m.ctrl.Call(m, "AddTx", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(*entities.Ledger)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddTx indicates an expected call of AddTx
func (mr *MockLedgersMockRecorder) AddTx(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddTx", reflect.TypeOf((*MockLedgers)(nil).AddTx), arg0, arg1, arg2, arg3, arg4)
}

// List mocks base method
func (m *MockLedgers) List(arg0 context.Context) (entities.Ledgers, error) {
	ret := m.ctrl.Call(m, "List", arg0)
	ret0, _ := ret[0].(entities.Ledgers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List
func (mr *MockLedgersMockRecorder) List(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockLedgers)(nil).List), arg0)
}
